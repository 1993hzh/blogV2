# Home page
#Do not need login filter
GET         /                                       controllers.Index.index
GET         /index                                  controllers.Index.showPassages(page:Int?=1, query:Option[String])
GET         /passage                                controllers.PassageController.passage(id:Int?=1)
GET         /about                                  controllers.Index.about
GET         /login                                  controllers.Login.index
GET         /logout                                 controllers.Login.logout
POST        /doLogin                                controllers.Login.login
GET         /loginWithSina                          controllers.Sina.login
GET         /getTokenForSina                        controllers.Sina.getToken
GET         /switchLang                             controllers.UserController.switchLang(lang:String)
GET         /switchEffect                           controllers.UserController.switchEffect(effect:String)

# Provide url for app
GET         /app/index                              controllers.Index.showPassagesToJSON(page:Int?=1, query:Option[String])
GET         /app/passage                            controllers.PassageController.passageForApp(id:Int?=1)
POST        /app/login                              controllers.Login.loginFromApp

#Need login filter
GET         /logged/profile                         controllers.UserController.profile
GET         /logged/message                         controllers.CommentController.getComments(page:Int?=1)
POST        /logged/comment                         controllers.CommentController.createComment
GET         /logged/viewComment                     controllers.CommentController.viewComment(passageId:Int, commentId:Int)
GET         /logged/markAs                          controllers.CommentController.markInMessageAs(markType:String, commentId:Int)
POST        /logged/markAll                         controllers.CommentController.markInMessagesAsRead

#below is management, need permission, do not change the url unless you updated the filter as well
#passage management
GET         /manage/deleteFile                      controllers.ImageUpload.deleteFile(fileName:String)
GET         /manage/getUploadToken                  controllers.ImageUpload.getUploadToken(imageName:String="")
GET         /manage/passage                         controllers.PassageController.manage(page:Int?=1)
GET         /manage/passage/create                  controllers.PassageController.create
POST        /manage/passage/doCreateOrUpdate        controllers.PassageController.doCreateOrUpdate
GET         /manage/passage/update                  controllers.PassageController.update(id:Int)
GET         /manage/passage/delete                  controllers.PassageController.delete(id:Int)
#tag management
GET         /manage/tag                             controllers.TagController.manage(page:Int?=1)
POST        /manage/tag/upsert                      controllers.TagController.upsert
GET         /manage/tag/delete                      controllers.TagController.delete(id:Int)
#user management, do not provide user update, they will do this by themself
GET         /manage/user                            controllers.UserController.manage(page:Int?=1)
POST        /manage/user/create                     controllers.UserController.create
GET         /manage/user/delete                     controllers.UserController.delete(id:Int)

# Map static resources from the /public folder to the /assets URL path
GET         /favicon.ico                            controllers.Assets.at(path="/public", file="img/favicon.ico")
GET         /assets/*file                           controllers.Assets.at(path="/public", file)
